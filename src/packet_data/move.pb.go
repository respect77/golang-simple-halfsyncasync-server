// Code generated by protoc-gen-go.
// source: move.proto
// DO NOT EDIT!

package packet_data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Position int32

const (
	Position_UP    Position = 1
	Position_Right Position = 2
	Position_Down  Position = 3
	Position_Left  Position = 4
)

var Position_name = map[int32]string{
	1: "UP",
	2: "Right",
	3: "Down",
	4: "Left",
}
var Position_value = map[string]int32{
	"UP":    1,
	"Right": 2,
	"Down":  3,
	"Left":  4,
}

func (x Position) Enum() *Position {
	p := new(Position)
	*p = x
	return p
}
func (x Position) String() string {
	return proto.EnumName(Position_name, int32(x))
}
func (x *Position) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Position_value, data, "Position")
	if err != nil {
		return err
	}
	*x = Position(value)
	return nil
}

type MoveRequest struct {
	Pos              *Position `protobuf:"varint,1,req,name=pos,enum=packet_data.Position" json:"pos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}

func (m *MoveRequest) GetPos() Position {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return Position_UP
}

type MoveResponse struct {
	Result           *int32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MoveResponse) Reset()         { *m = MoveResponse{} }
func (m *MoveResponse) String() string { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()    {}

func (m *MoveResponse) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func init() {
	proto.RegisterEnum("packet_data.Position", Position_name, Position_value)
}
